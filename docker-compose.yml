version: "3"

services:

  nitter:
    image: zedeus/nitter:latest
    container_name: nitter
    restart: unless-stopped
    volumes:
      - ./nitter.conf:/src/nitter.conf:Z,ro
    networks:
      - nitter
      - redis
    depends_on:
      - redis
    healthcheck:
      test: wget -nv --tries=1 --spider http://127.0.0.1:8080/Jack/status/20 || exit 1
      interval: 15s
      timeout: 5s
      retries: 2
    user: "998:998"
    read_only: true
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis:/data
    networks:
      - redis
    healthcheck:
      test: redis-cli ping
      interval: 15s
      timeout: 5s
      retries: 2
    user: "999:1000"
    read_only: true
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL

  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    volumes:
      - ./config:/config
    networks:
      - heimdall
    restart: unless-stopped

  librespeed:
    image: lscr.io/linuxserver/librespeed:latest
    container_name: librespeed
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - PASSWORD=PASSWORD
        #- CUSTOM_RESULTS=false #optional
        #- DB_TYPE=sqlite #optional
        #- DB_NAME=DB_NAME #optional
        #- DB_HOSTNAME=DB_HOSTNAME #optional
        #- DB_USERNAME=DB_USERNAME #optional
        #- DB_PASSWORD=DB_PASSWORD #optional
        #- DB_PORT=DB_PORT #optional
    volumes:
      - //config:/config
    networks:
      - librespeed
    restart: unless-stopped

  libreddit:
    image: libreddit/libreddit
    restart: unless-stopped
    container_name: libreddit
    environment:
      - LIBREDDIT_DEFAULT_BLUR_NSFW=on
    user: nobody
    read_only: true
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    networks:
      - libreddit
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "--tries=1", "http://localhost:8080/settings"]
      interval: 5m
      timeout: 3s

  swag:
    image: ghcr.io/linuxserver/swag
    container_name: swag
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - URL=simpleprivacy.fr
      - SUBDOMAINS=services,nitter,librespeed,libreddit
      - VALIDATION=http
      - ONLY_SUBDOMAINS=true
      - EMAIL=contact@simpleprivacy.fr
      # uncomment the following if you want to try your domains before providing real certs (since there are rate limits of 5 certs by week with Let's Encrypt)
      #- STAGING=true
    volumes:
      - ./swag:/config:Z
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 443:443
      - 80:80
    networks:
      - nitter
      - librespeed
      - heimdall
      - libreddit
    security_opt:
      - no-new-privileges:true
    cap_add:
      - NET_ADMIN

networks:
  nitter:
  redis:
  heimdall:
  librespeed:
  libreddit:

volumes:
  redis:
